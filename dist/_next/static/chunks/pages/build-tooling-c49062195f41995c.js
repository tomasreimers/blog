(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8149],{9335:function(e,s,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/build-tooling",function(){return t(3942)}])},4152:function(e,s,t){"use strict";var n=t(5893);t(7294);var r=t(1163);let a={faviconGlyph:"\uD83D\uDCDA",logo:(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("span",{className:"font-black",children:"FRONTEND DOCS"}),(0,n.jsx)("span",{className:"font-black text-xs px-2 py-1 ml-2 rounded-md border text-gray-600 border-gray-300 dark:text-gray-400 dark:border-gray-700",children:"DRAFT"})]}),docsRepositoryBase:"https://github.com/tomasreimers/clientside",footer:{component:null},sidebar:{titleComponent(e){let{type:s,title:t,route:r}=e;return"doc"===s&&["#",""].includes(r)?(0,n.jsx)("span",{className:"text-gray-300 dark:text-neutral-600",title:"Coming soon",children:t}):(0,n.jsx)(n.Fragment,{children:t})}},feedback:{content:(0,n.jsx)(n.Fragment,{children:"Questions? Leave me feedback →"})},editLink:{text:(0,n.jsx)(n.Fragment,{children:"Opinions? Suggest an edit →"})},toc:{extraContent:(0,n.jsxs)("div",{className:"mt-4 text-xs text-gray-500 dark:text-gray-400 contrast-more:text-gray-800 contrast-more:dark:text-gray-50",children:[(0,n.jsx)("p",{children:"Hi! My name is Tomas; I have been programming for the web for 15+ years and developed reactive frontend frameworks at Facebook."}),(0,n.jsx)("p",{className:"mt-2",children:"This site is a ~20-page, front-to-back-readable guide on some of the knowledge, opinions, and intuition I've picked up along the way."}),(0,n.jsx)("p",{className:"mt-2",children:"Everything is still under development, so feel free to suggest edits or follow me on Twitter for updates."})]})},project:{},search:{component:null},head:()=>{let{asPath:e}=(0,r.useRouter)();return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,n.jsx)("meta",{name:"twitter:creator",content:"@tomasreimers"}),(0,n.jsx)("meta",{property:"og:image",content:"https://frontenddocs.com/api/og".concat(e,"image.png")})]})},useNextSeoProps:()=>({titleTemplate:"%s – Frontend docs",defaultTitle:"Frontend docs",description:"A ~20-page, front-to-back-readable guide on writing frontend for experienced developers."})};s.Z=a},3942:function(e,s,t){"use strict";t.r(s),t.d(s,{__toc:function(){return l},default:function(){return d}});var n=t(5893),r=t(2673),a=t(6386),o=t(4152);t(9059);var i=t(2643);function Video(e){let{src:s,title:t}=e;return(0,n.jsx)("iframe",{className:"mt-6 w-full aspect-video",src:s,title:t,frameBorder:0,allow:"autoplay; clipboard-write; encrypted-media; picture-in-picture; web-share",allowFullScreen:!0})}let l=[{depth:2,value:"Writing and running code",id:"writing-and-running-code"},{depth:3,value:"Languages",id:"languages"},{depth:3,value:"Compilers and transpilers",id:"compilers-and-transpilers"},{depth:3,value:"Linters",id:"linters"},{depth:2,value:"Build targets",id:"build-targets"},{depth:3,value:"Runtimes",id:"runtimes"},{depth:3,value:"Module systems",id:"module-systems"},{depth:3,value:"Bundlers",id:"bundlers"},{depth:3,value:"Orchestrators",id:"orchestrators"},{depth:2,value:"Sharing code and scripts",id:"sharing-code-and-scripts"},{depth:3,value:"Libraries and frameworks",id:"libraries-and-frameworks"},{depth:4,value:"Shims and polyfills",id:"shims-and-polyfills"},{depth:4,value:"Evolving the langauge",id:"evolving-the-langauge"},{depth:3,value:"Package managers",id:"package-managers"},{depth:3,value:"Workspaces (monorepos)",id:"workspaces-monorepos"},{depth:2,value:"Scaffolders",id:"scaffolders"}];function _createMdxContent(e){let s=Object.assign({h1:"h1",p:"p",h2:"h2",h3:"h3",a:"a",ul:"ul",li:"li",code:"code",pre:"pre",span:"span",strong:"strong",em:"em",ol:"ol",h4:"h4"},(0,i.a)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{children:"Build tooling: More tools and more problems"}),"\n",(0,n.jsx)(s.p,{children:"The JavaScript ecosystem is a reminder that the web is held up by shoestrings and gum; it is this immense mess of technologies, all haphazardly thrown together, that somehow happens to work just enough to get your website online."}),"\n",(0,n.jsx)(Video,{src:"https://www.youtube.com/embed/Uo3cL4nrGOk",title:"Interview with Senior JS Developer"}),"\n",(0,n.jsx)(s.p,{children:"I have no doubt that this heavily-customized, and poorly abstracted, tooling is one of the many things that scares away the casual developer from exploring frontend development. I hope to provide you with just enough context to see the forest among the trees, and let you resume your journey in frontend development."}),"\n",(0,n.jsx)(s.h2,{id:"writing-and-running-code",children:"Writing and running code"}),"\n",(0,n.jsx)(s.p,{children:"As the web has gotten more complex, JavaScript has turned from a simple scripting language--primarily embedded in HTML--to a full blown language. Its simple origins necessitated extensive tooling to keep up with the explosive adoption and ever-more-complex use-cases."}),"\n",(0,n.jsx)(s.h3,{id:"languages",children:"Languages"}),"\n",(0,n.jsxs)(s.p,{children:["While JavaScript, the runtime target, has experienced incredible growth, people have done a lot to avoid writing JavaScript, the language. For example, ",(0,n.jsx)(s.a,{href:"https://coffeescript.org/#introduction",children:"CoffeeScript"})," was pure syntactic sugar over JavaScript to emphasize the functional programming features of the language."]}),"\n",(0,n.jsx)(s.p,{children:"Beyond syntax, as JavaScript codebases grew, they needed static typing:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"https://flow.org/en/docs/getting-started/",children:"Flow"}),": built by Facebook, one of the earliest attempts to add type annotations to JavaScript."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"https://www.typescriptlang.org/",children:"TypeScript"}),": the most popular way to add types to JavaScript. Built by Microsoft, it has become the defacto way to add types to JavaScript with support across the ecosystem."]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["A second transformation of the language happened with React. As mentioned last chapter, a core innovation of React was ",(0,n.jsx)(s.code,{children:".jsx"})," files: allowing developers to write HTML in JavaScript. JSX used a transpiler to transform JSX files into JavaScript files by transforming the HTML-like syntax into JavaScript function calls. Specifically, the transpiler can take"]}),"\n",(0,n.jsx)(s.pre,{"data-language":"jsx","data-theme":"default",filename:"example.jsx",children:(0,n.jsxs)(s.code,{"data-language":"jsx","data-theme":"default",children:[(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"function"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"Component"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"() {"})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"return"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" <"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"h1"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"className"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'title'"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:">Hello, world!</"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"h1"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:">;"})]}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})})]})}),"\n",(0,n.jsx)(s.p,{children:"... and transform it into this:"}),"\n",(0,n.jsx)(s.pre,{"data-language":"js","data-theme":"default",filename:"example.js",children:(0,n.jsxs)(s.code,{"data-language":"js","data-theme":"default",children:[(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"function"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"Component"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"() {"})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"return"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"JSX"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:".createElement"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"("})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'h1'"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    {className"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'title'"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'Hello, world!'"})]}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  );"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})})]})}),"\n",(0,n.jsxs)(s.p,{children:["Because of the popularity of TypeScript, there is now a ",(0,n.jsx)(s.code,{children:"tsx"})," file type: TypeScript with HTML-like syntax."]}),"\n",(0,n.jsx)(s.h3,{id:"compilers-and-transpilers",children:"Compilers and transpilers"}),"\n",(0,n.jsx)(s.p,{children:"Supporting those different languages are compilers and transpilers. In the world of frontend web development, the transpiler serves 4 key purposes:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Types"}),": Supporting static typing, probably through TypeScript"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"JSX"}),": Supporting JSX / TSX"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Supporting different runtimes"}),": these days, JavaScript runs everywhere--browsers (including different versions), the server, in desktop apps (via Electron), in CLI tools, etc. Those different runtimes require slightly different formats (more on that in the next section), and the compiler can abstract this away from the developer."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Polyfills"}),": Because different runtimes and different versions support different language features, the compiler can detect which features you need and inject any necessary polyfills."]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Common compilers are:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"https://www.typescriptlang.org/docs/handbook/compiler-options.html",children:"TSC"}),": Ships with TypeScript."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"https://babeljs.io/",children:"Babel"}),": A pluggable compiler. Currently the most popular."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"https://swc.rs/",children:"SWC"}),": A replacement for Babel written by Vercel intended to be faster."]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Use of these compilers and transpilers are not mutually exclusive. It's not uncommon to see projects use both TSC and babel in the same build step."}),"\n",(0,n.jsx)(s.h3,{id:"linters",children:"Linters"}),"\n",(0,n.jsxs)(s.p,{children:["Lastly, sizable codebases want to ensure that developers are following common formatting. ",(0,n.jsx)(s.a,{href:"https://eslint.org/",children:"ESLint"})," is the most popular linter, with ",(0,n.jsx)(s.a,{href:"https://github.com/dustinspecker/awesome-eslint",children:"many community-built plugins"}),"."]}),"\n",(0,n.jsxs)(s.p,{children:["While linters can catch many code-formatting bugs, ",(0,n.jsx)(s.a,{href:"https://prettier.io/",children:"Prettier"})," is a very popular code formatter. It is typically used along-side Eslint."]}),"\n",(0,n.jsx)(s.h2,{id:"build-targets",children:"Build targets"}),"\n",(0,n.jsx)(s.p,{children:"Because JavaScript runs everywhere, new platforms continue to create support for JavaScript. It is a self fufilling prophecy."}),"\n",(0,n.jsx)(s.h3,{id:"runtimes",children:"Runtimes"}),"\n",(0,n.jsx)(s.p,{children:"While JavaScript does have a language spec: there are different runtime engines (with partial or extended implementations of the language), different versions, and different global variables available at runtime; as a result, you need to know what platform you're building your JavaScript program for."}),"\n",(0,n.jsxs)(s.p,{children:["The most common place to run JavaScript is the browser. Browsers consist of two parts: the UI (how you navigate to web pages) and the browser engine, the part that takes web pages and runs / renders them; while there are many browsers, there are only a few ",(0,n.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/Comparison_of_browser_engines",children:"browser engines"}),". Three key JS engines to be aware of are:"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Chrome: supported by the ",(0,n.jsx)(s.a,{href:"https://v8.dev/",children:"V8 JavaScript engine"}),", maintained by Google"]}),"\n",(0,n.jsxs)(s.li,{children:["Firefox: supported by the ",(0,n.jsx)(s.a,{href:"https://spidermonkey.dev/",children:"SpiderMonkey JavaScript engine"}),", maintained by Mozilla"]}),"\n",(0,n.jsxs)(s.li,{children:["Safari: supported by the ",(0,n.jsx)(s.a,{href:"https://docs.webkit.org/Deep%20Dive/JSC/JavaScriptCore.html",children:"JavascriptCore engine"})," (part of ",(0,n.jsx)(s.a,{href:"https://docs.webkit.org/index.html",children:"WebKit"}),"), maintained by Apple"]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["As code running in the browser, any scripts have access to the ",(0,n.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Document",children:"document"})," and ",(0,n.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window",children:"window"})," global variables."]}),"\n",(0,n.jsxs)(s.p,{children:["For a long time, those were the only platforms most developers JavaScript authored JavaScript for. Then ",(0,n.jsx)(s.a,{href:"https://nodejs.org/en",children:"Node"})," came around and changed everything. Node took Chrome's JavaScript engine (V8) and created a set of APIs intended to run JavaScript outside the browser's sandbox. To this day, Node is the most popular way to author a JavaScript web server or run JavaScript scripts locally. It introduces a few ",(0,n.jsx)(s.a,{href:"https://nodejs.org/api/globals.html",children:"global variables"})," (including ",(0,n.jsx)(s.code,{children:"global"}),", ",(0,n.jsx)(s.code,{children:"process"}),", etc.) because the ",(0,n.jsx)(s.code,{children:"window"})," and ",(0,n.jsx)(s.code,{children:"document"})," APIs don't make sense when running outside of a web browser."]}),"\n",(0,n.jsxs)(s.p,{children:["Because users sometimes need to test or run code against different versions of node, ",(0,n.jsx)(s.a,{href:"https://github.com/nvm-sh/nvm",children:"nvm"})," is a tool that lets users manage multiple node installs."]}),"\n",(0,n.jsxs)(s.p,{children:["While node is definitely still the most popular runtime for non-browser-based code, more recently we've seen the creation of new runtimes, including ",(0,n.jsx)(s.a,{href:"https://deno.com/",children:"Deno"})," and ",(0,n.jsx)(s.a,{href:"https://bun.sh/",children:"Bun"}),", that try to improve upon the speed, size, and developer experience of node."]}),"\n",(0,n.jsxs)(s.p,{children:['For developers writing "native" (not browser based) applications, ',(0,n.jsx)(s.a,{href:"https://www.electronjs.org/",children:"Electron"})," is a platform built on top of Node and Chromium (the open source foundation of Chrome) that allows developers to write desktop apps in JavaScript. To enable that, it introduces a ",(0,n.jsx)(s.a,{href:"https://www.electronjs.org/docs/latest/api/app",children:"suite of APIs"})," to access the native platform."]}),"\n",(0,n.jsxs)(s.p,{children:["And for developers writing mobile apps, ",(0,n.jsx)(s.a,{href:"https://reactnative.dev/",children:"React Native"})," is the latest and most popular runtime allowing developers to write their mobile apps with web technologies. React Native used to use the platform's native JavaScript engine (V8 on Android and JavascriptCore on iOS), but more recently they've developed their own runtime, ",(0,n.jsx)(s.a,{href:"https://hermesengine.dev/",children:"Hermes"}),". Much like Electron, it introduces a ",(0,n.jsx)(s.a,{href:"https://reactnative.dev/docs/appstate",children:"handful of APIs"})," for communicating with the host device. Older technologies that tried to make web technologies available to mobile developers include ",(0,n.jsx)(s.a,{href:"https://nativescript.org/",children:"NativeScript"})," and ",(0,n.jsx)(s.a,{href:"https://cordova.apache.org/",children:"Apache Cordova"}),"."]}),"\n",(0,n.jsx)(s.h3,{id:"module-systems",children:"Module systems"}),"\n",(0,n.jsx)(s.p,{children:'Due to its simple origins, JavaScript never had a good way to split out code across files. It wasn\'t intended for applications of that scale; as JavaScript broke out of the browser, this had to change, and many people rushed to create a solution. This led to many, competing solutions to the problem of "how do I import one JavaScript file from another".'}),"\n",(0,n.jsx)(s.p,{children:"These module systems have mostly been paired down to 2:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"CommonJS (CJS): The most popular standard to date."}),"\n",(0,n.jsxs)(s.li,{children:["ECMAScript modules (ESM): The newer standard introduced as part of the JavaScript spec. This will eventually become ",(0,n.jsx)(s.em,{children:"the"})," standard; it just takes time."]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Older technologies that are no longer common are:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Asynchronous module definition (AMD): Created for a polyfill that is no longer necessary."}),"\n",(0,n.jsxs)(s.li,{children:["Universal module definition (UMD): Created to unify the other module definition syntaxes. ",(0,n.jsx)(s.a,{href:"https://xkcd.com/927/",children:"Relevant XKCD"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["Introduced by Node, ",(0,n.jsx)(s.a,{href:"https://nodejs.org/docs/latest/api/modules.html",children:"CommonJS"})," allows developers to assign variables and functions to an automatically created ",(0,n.jsx)(s.code,{children:"module.exports"})," object (e.g. ",(0,n.jsx)(s.code,{children:'module.exports.title = "Hello, world!"'}),"), and then import files via ",(0,n.jsx)(s.code,{children:'require("path/to/file.js")'}),". The contents of that file is the ",(0,n.jsx)(s.a,{href:"https://nodejs.org/docs/latest/api/modules.html#the-module-wrapper",children:"wrapped in a function"})," and executed, returning the resultant value of module.exports. This object is a ",(0,n.jsx)(s.a,{href:"https://nodejs.org/docs/latest/api/modules.html#caching",children:"singleton"})," (so requiring the object multiple times will return the same object)."]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.a,{href:"https://nodejs.org/api/esm.html",children:"ECMAScript modules"})," improve on this standard in a few key ways:"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Exports are now done via an ",(0,n.jsx)(s.code,{children:"exports"})," keyword (",(0,n.jsx)(s.code,{children:'export const title = "Hello, world";'}),")"]}),"\n",(0,n.jsxs)(s.li,{children:["Imports are done via an import keyword (",(0,n.jsx)(s.code,{children:'import { title } from "./path/to/file.js"'}),")"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",children:"Promises"})," can be awaited at the top level"]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["Because ECMAScript modules are a superset of CJS modules, ESM files can import CJS, but not the other way around. Sometimes authors will denote this by naming ESM files as ",(0,n.jsx)(s.code,{children:"*.mjs"}),", although I do not recommend this because ESM will become the standard after a few years."]}),"\n",(0,n.jsx)(s.h3,{id:"bundlers",children:"Bundlers"}),"\n",(0,n.jsx)(s.p,{children:"While modules, predicatably, became a very popular way to organize code, web browsers never added first party support for them. The result was a need for packagers: a way to take all of the modularized code and concatenate it into one file."}),"\n",(0,n.jsxs)(s.p,{children:["The most popular packager is ",(0,n.jsx)(s.a,{href:"https://webpack.js.org/",children:"Webpack"}),", which not only bundles, but has an ",(0,n.jsx)(s.a,{href:"https://webpack.js.org/plugins/",children:"extensive plugin ecosystem"}),"."]}),"\n",(0,n.jsx)(s.p,{children:"That said, like everything else in this ecosystem, there are many alternatives. Some older ones include:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"https://browserify.org/",children:"Browserify"}),": early to the game, was very popular."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"https://metrobundler.dev/",children:"Metro"}),": used by React Native."]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"More recently, there have been a class of new entrants, all targeting the same problem: improving upon Webpack's (notably bad) performance:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://rollupjs.org/",children:"Rollup"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://esbuild.github.io/",children:"ESBuild"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://vitejs.dev/",children:"Vite"})}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["Ultimately, the bundler is a glorified version of ",(0,n.jsx)(s.code,{children:"cat"}),", with a few extra features to ensure things like:"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Dependencies are correctly ordered"}),"\n",(0,n.jsx)(s.li,{children:"Any unreferenced code is removed"}),"\n",(0,n.jsx)(s.li,{children:"Files are split up to optimize for browser caching (e.g. if you depend on a library that is unlikely to change, output a separate file so the browser can cache it across version bumps of your application)"}),"\n",(0,n.jsxs)(s.li,{children:["Node globals are shimmed to work in the browser (a common one is to replace ",(0,n.jsx)(s.code,{children:"process.env.FOO"}),", the way you access the env variable ",(0,n.jsx)(s.code,{children:"FOO"})," with whatever the value of ",(0,n.jsx)(s.code,{children:"FOO"})," is at build time)"]}),"\n",(0,n.jsx)(s.li,{children:"Minifying code to save network bandwidth (for example, comments don't need to be sent to the browser and whitespace can be removed)"}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"orchestrators",children:"Orchestrators"}),"\n",(0,n.jsxs)(s.p,{children:["That's a lot of tools. Running them all in concert is difficult. The result is a set of tooling intended to help you coordinate all the other tools. Other languages and ecosystems use ",(0,n.jsx)(s.a,{href:"https://www.gnu.org/software/make/manual/make.html",children:"MAKE"}),", some JavaScript projects do to, but as is customary here, we also have our own, bespoke, solutions."]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.a,{href:"https://gruntjs.com/",children:"Grunt"})," and, later, ",(0,n.jsx)(s.a,{href:"https://gulpjs.com/",children:"Gulp"})," were introduced to help transform files. These days they're less frequent (as the packagers have subsumed much of this functionality), but still exist."]}),"\n",(0,n.jsx)(s.h2,{id:"sharing-code-and-scripts",children:"Sharing code and scripts"}),"\n",(0,n.jsx)(s.p,{children:"The advent of modules and packages (more on that in a second) lowered the barrier to share and reuse others code, and led to an explosion of JavaScript libraries."}),"\n",(0,n.jsx)(s.h3,{id:"libraries-and-frameworks",children:"Libraries and frameworks"}),"\n",(0,n.jsxs)(s.p,{children:["While modules certainly lowered the barrier to share, people have been sharing JavaScript forever. These days, most libraries can be found in the ",(0,n.jsx)(s.a,{href:"https://www.npmjs.com/",children:"NPM package registry"}),". And range from full fledged frameworks (you can install Electron that way) to libraries that ",(0,n.jsx)(s.a,{href:"https://www.npmjs.com/package/left-pad",children:"add whitespace to strings"}),"."]}),"\n",(0,n.jsx)(s.p,{children:"There are too many libraries to go through my favorites, so instead I'll try to reference them as they're relevant in later chapters. Three general pieces of wisdom about them are:"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsx)(s.li,{children:"While libraries are really easy to add and appear really friendly, make no mistake, you are introducing someone else's code to your codebase. That code could be buggy, built with a different set of constraints, or plainly insecure. Because JS developers are so quick to introduce packages, software supply chain security is especially difficult in JavaScript."}),"\n",(0,n.jsx)(s.li,{children:"Speaking of different constraints, don't be afraid to peak into how a package is implemented. Far too often I hear developers say \"well I can't do that because the package does something close to what we need, but not exactly what we need\". Many packages are less than 100 lines, it's frequently easier and more maintainble to maintain that yourself than to hack around someone else's constraints."}),"\n",(0,n.jsx)(s.li,{children:"While many packages are written, far fewer are maintained. Part of the reason you'll hear me reference who authors which library is because I have far more faith that a tool built and used by Facebook will be maintained than one built by a no-name developer with no incentive to do so."}),"\n"]}),"\n",(0,n.jsx)(s.h4,{id:"shims-and-polyfills",children:"Shims and polyfills"}),"\n",(0,n.jsx)(s.p,{children:"One important class of libraries are shims and polyfills. But before we talk about them, we need to talk about the governance of the web."}),"\n",(0,n.jsxs)(s.p,{children:["The web standard is officially maintained by the ",(0,n.jsx)(s.a,{href:"https://www.w3.org/",children:"W3C"}),", a standalone group created to steward the protocols of the web; however, because browsers are maintained by various organizations, which APIs you can use depends on which parts of the spec the browser vendor has implemented. In addition,browser vendors (specifically Chrome and Safari) will implement APIs before they're standards as a way to serve the needs of their parent organizations (Google and Apple respectively) and as a way to push the web forward."]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.a,{href:"https://caniuse.com/",children:"CanIUse"})," maintains a set of compatibility tables for various features across browser vendors and versions."]}),"\n",(0,n.jsx)(s.p,{children:"To deal with the inconsistency of runtimes, websites use one of three strategies:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Browser detection"}),": If you've ever seen the message \"Please open this site in Chrome or Firefox for the best experience\", you've experienced browser detection. The website is detecting which browser you're using, and gating the experience based on it, probably because the website requires some not-yet-widely-supported API. While common, this is broadly considered bad practice because it excludes niche browsers, excludes future browsers, and is unlikely to be updated once the new version of a currently-incompatible browser adds all the necessary APIs to support the site."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Feature detection"}),': The better version of browser detection is feature detection, which simply asks "does the current browser support the specific feature I need" (for example, if you\'re trying to use the ',(0,n.jsx)(s.code,{children:"window.querySelectorAll()"})," function, you can test if ",(0,n.jsx)(s.code,{children:"window.querySelectorAll"})," is a function; because in incompatible browsers it's not even defined). A popular library for this is ",(0,n.jsx)(s.a,{href:"https://modernizr.com/",children:"Modernizr"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Polyfills (aka Shims)"}),": The even better version of feature detection is to not only detect if the browser supports a feature, but to retrofit it when it doesn't. As I said, JavaScript is an incredibly flexible langugae and even lets you add new functions to base types (for example, you can add a method to the base array type). Polyfills will detect if a browser has an API, and if not, define it for you; for example, the ",(0,n.jsx)(s.code,{children:".forEach()"})," method was introduced on arrays, but before every browser had it, websites might include a piece of code that checked if ",(0,n.jsx)(s.code,{children:"forEach"})," existed on the base array type, and if not, ",(0,n.jsx)(s.a,{href:"https://vanillajstoolkit.com/polyfills/arrayforeach/",children:"define it"}),"."]}),"\n"]}),"\n",(0,n.jsx)(s.h4,{id:"evolving-the-langauge",children:"Evolving the langauge"}),"\n",(0,n.jsxs)(s.p,{children:["In addition to frameworks and polyfills, there are a handful of libraries dedicated to adding common utility functions to JavaScript. This is common in various languages; a popular example here is ",(0,n.jsx)(s.a,{href:"https://underscorejs.org/",children:"underscore.js"}),"."]}),"\n",(0,n.jsx)(s.p,{children:"While the bareness of JavaScript can be disheartening to developers coming from more full-featured languages, I'll leave you on a positive note:"}),"\n",(0,n.jsxs)(s.p,{children:["As one who's been watching the language and browser runtime evolve, we are making strides. For example, when jQuery was popular, selecting elements in the DOM was difficult. The author of jQuery built ",(0,n.jsx)(s.a,{href:"https://github.com/jquery/sizzle",children:"Sizzle"}),", a library that abstracted away selecting elements and let developers use CSS selectors instead. Since then, browsers have added native support for this pattern with ",(0,n.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll",children:"document.querySelectorAll"}),"."]}),"\n",(0,n.jsxs)(s.p,{children:["And it doesn't stop there, we're watching the same thing play out with ",(0,n.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Web_components",children:"web components"})," right now: browsers are adding native support for the component architecture that frontend libraries have popularized."]}),"\n",(0,n.jsx)(s.h3,{id:"package-managers",children:"Package managers"}),"\n",(0,n.jsxs)(s.p,{children:["Packaged with node came a tool called ",(0,n.jsx)(s.code,{children:"npm"}),". ",(0,n.jsx)(s.code,{children:"npm"})," created a standard way to share code. It specified a format of a zip archive with a ",(0,n.jsx)(s.code,{children:"package.json"})," file at the root that specified any dependencies and the entrypoint to the code. It also provided an ",(0,n.jsx)(s.a,{href:"https://www.npmjs.com/",children:"online regsitry"})," to share these packages, that could easily be published to (using ",(0,n.jsx)(s.code,{children:"npm publish"}),") or pulled from (using ",(0,n.jsx)(s.code,{children:"npm install PACKAGE_NAME"}),")."]}),"\n",(0,n.jsx)(s.p,{children:"NPM is still the largest, and most common, registry; although some companies maintain private registries to share internal packages."}),"\n",(0,n.jsxs)(s.p,{children:["That said, NPM is no longer the only package manager, and there are now other tools that help manage packages locally while still publish to and pulling from npm's online registry. ",(0,n.jsx)(s.a,{href:"https://pnpm.io/",children:"PNPM"})," is a tool developed as drop-in replacement for NPM, with one core advantage: it saves disk space by deduplicating shared packages across your machine."]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.a,{href:"https://yarnpkg.com/",children:"Yarn"})," was developed by FB with a few key benefits over NPM:"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Zero install"}),": yarn stores a copy of dependencies as a zip file that you can commit. While you might wonder if committing dependencies is advisable, it speeds up CI and protects you from remote changes in the registry (in the past, people have removed versions of packages from NPM, breaking builds, and uploaded malicious versions that get updated with little auditability)."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Plug-n-play"}),": Yarn introduced ",(0,n.jsx)(s.a,{href:"https://yarnpkg.com/features/pnp",children:"PNP"})," as an opt-in way to save disk space, because zero install means that all packages are in zip files, why not override ",(0,n.jsx)(s.code,{children:"require()"})," to simply reach into those zip files (which are unzipped in memory); this also saves the OS from having to page 100s-100,000s of tiny files into memory. While interesting in theory, and faster in practice, the ecosystem has not adopted it and getting tools like React Native, Webpack, or Electron to work with PNP is difficult. For this reason, I typically disable this."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Workspaces"}),": discussed below."]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Because of Facebook's support, and the corresponding features intended for company-wide monorepos, yarn is my prefered package manager."}),"\n",(0,n.jsx)(s.h3,{id:"workspaces-monorepos",children:"Workspaces (monorepos)"}),"\n",(0,n.jsx)(s.p,{children:"Packages were great, and soon people started putting many packages in a single repo. If memory serves, I think React was one of the earliest people to do this."}),"\n",(0,n.jsxs)(s.p,{children:["NPM did not have great support for importing local packages (and certainly not for developing multiple local packages simultaneously). Yarn solved this through ",(0,n.jsx)(s.a,{href:"https://classic.yarnpkg.com/lang/en/docs/workspaces/",children:"workspaces"}),", and soon this became a common feature across various package managers."]}),"\n",(0,n.jsxs)(s.p,{children:["Along with supporting multiple local packages, developers needed a way to coordinate tasks across those packages (the most simple example being you should first build any dependencies of a package before you build the package itself). Two tools that came into existence were ",(0,n.jsx)(s.a,{href:"https://turbo.build/",children:"TurboRepo"})," and ",(0,n.jsx)(s.a,{href:"https://lerna.js.org/",children:"Lerna"}),". Because TurboRepo is supported by Vercel, it is my preferred tool."]}),"\n",(0,n.jsxs)(s.p,{children:["One edgecase to call out with multiple local packages is ",(0,n.jsx)(s.strong,{children:"Hoisting"}),":"]}),"\n",(0,n.jsxs)(s.p,{children:["For background, when you import a package in node, node climbs the directory structure checking in ",(0,n.jsx)(s.code,{children:"node_modules"}),". For example, if I require package ",(0,n.jsx)(s.code,{children:"foo"})," from ",(0,n.jsx)(s.code,{children:"/some/path/file.js"}),", node will check the following locations, stopping when it finds a file."]}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"/some/path/node_modules/foo"}),", and then"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"/some/node_modules/foo"}),", and then"]}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.code,{children:"/node_modules/foo"})}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Now, imagine you have a repository with two workspaces, each which depend on react:"}),"\n",(0,n.jsx)(s.pre,{"data-language":"text","data-theme":"default",children:(0,n.jsxs)(s.code,{"data-language":"text","data-theme":"default",children:[(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"repository/"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  workspace-a/"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    node_modules/"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"      react/"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  workspace-b/"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    node_modules/"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"      react/"})})]})}),"\n",(0,n.jsxs)(s.p,{children:["If A depends on B, compiling A will result in an artifact that contains two copies of ",(0,n.jsx)(s.code,{children:"react"})," (as any code in workspace-a that references react will resolve to one react, and any code in workspace-b that references react will resolve to another react)."]}),"\n",(0,n.jsx)(s.p,{children:'One way to solve this in a workspace is to "hoist" react:'}),"\n",(0,n.jsx)(s.pre,{"data-language":"text","data-theme":"default",children:(0,n.jsxs)(s.code,{"data-language":"text","data-theme":"default",children:[(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"repository/"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  workspace-a/"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  workspace-b/"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  node_modules/"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    react/"})})]})}),"\n",(0,n.jsx)(s.p,{children:"Now both workspaces will resolve to the same react."}),"\n",(0,n.jsx)(s.p,{children:"If you find this confusing, it is, but it's something to be mindful of when working with workspaces."}),"\n",(0,n.jsx)(s.h2,{id:"scaffolders",children:"Scaffolders"}),"\n",(0,n.jsx)(s.p,{children:"If you had to set it all this tooling yourself, it could easily be a week of work. As a result, there are a handful of tools that help you scaffold new projects."}),"\n",(0,n.jsxs)(s.p,{children:["The most common general tool here is ",(0,n.jsx)(s.a,{href:"https://yeoman.io/",children:"Yeoman"}),", which lets developers author customer project ",(0,n.jsx)(s.a,{href:"https://yeoman.io/generators/",children:"generators"}),". There are also application-specific scaffolders, such as ",(0,n.jsx)(s.a,{href:"https://nextjs.org/docs/pages/api-reference/create-next-app",children:"create-next-app"}),", ",(0,n.jsx)(s.a,{href:"https://github.com/expo/create-react-native-app",children:"create-react-native-app"}),", or ",(0,n.jsx)(s.a,{href:"https://html5boilerplate.com/",children:"HTML5 boilerplate"}),"."]})]})}let c={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,i.a)(),e.components);return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(_createMdxContent,{...e})}):_createMdxContent(e)},pageOpts:{filePath:"pages/build-tooling.mdx",route:"/build-tooling",timestamp:1703973711e3,pageMap:[{kind:"Meta",data:{index:"Foreword","-- Platform":{type:"separator",title:"WEB FUNDAMENTALS"},html:"Chapter 1: HTML",css:"Chapter 2: CSS",javascript:"Chapter 3: JavaScript","-- React":{type:"separator",title:"REACT ESSENTIALS"},components:"Chapter 4: Components",applications:"Chapter 5: Applications","build-tooling":"Chapter 6: Build tooling","profiling-and-testing":"Chapter 7: Profiling & testing","-- Design":{type:"separator",title:"DESIGN PRINCIPLES"},"design-systems":"Chapter 8: Design systems","ui-patterns":"Chapter 9: UI patterns","-- Data":{type:"separator",title:"DATA ARCHITECTURE"},state:"Chapter 10: State stores",network:"Chapter 11: Network & sync","client-compute":"Chapter 12: Client compute",contact:{title:"Want updates? Follow me on Twitter ↗",type:"page",href:"https://twitter.com/tomasreimers",newWindow:!0}}},{kind:"MdxPage",name:"build-tooling",route:"/build-tooling"},{kind:"MdxPage",name:"components",route:"/components"},{kind:"MdxPage",name:"css",route:"/css"},{kind:"MdxPage",name:"design-systems",route:"/design-systems"},{kind:"MdxPage",name:"html",route:"/html"},{kind:"MdxPage",name:"index",route:"/"},{kind:"MdxPage",name:"javascript",route:"/javascript"}],flexsearch:{codeblocks:!0},title:"Build tooling: More tools and more problems",headings:l},pageNextRoute:"/build-tooling",nextraLayout:a.ZP,themeConfig:o.Z};var d=(0,r.j)(c)}},function(e){e.O(0,[3620,9774,2888,179],function(){return e(e.s=9335)}),_N_E=e.O()}]);